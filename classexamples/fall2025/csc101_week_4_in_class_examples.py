# -*- coding: utf-8 -*-
"""CSC101 Week 4 In Class Examples.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-7p_27353iXxelNRj6WljrhpqQDBUO_p

# Compound Data Types in Python

## Strings
"""

text = "Hello, world!"
print(f"{text=}")

multiline = """This string
covers
multiple lines"""
print('multiline=' + multiline)

multiline2 = "This string\ncovers\nmultiple lines using a newline"
print('multiline2=' + multiline2)
print("Print multiline with an f-string")
print(f"{multiline=}")
print(f"{multiline2=}")

# String operations
print(text.upper())
print(text.lower())
print(text.replace("world", "CSC101"))
print(text.split(","))
print(text.strip())

# Indexing & Slicing
print(text[0])
print(text[1])
print(text[2])
print(text[3])
print(text[4])
print(text[0:5])
print(text[1:6])

"""## Lists"""

# Creating lists
numbers = [1, 2, 3, 4, 5]
print(f"{numbers=}")
names = ["Alice", "Bob", "Charlie"]
print(f"{names=}")
mixed = [1, "two", 3.0, False]
print(f"{mixed=}")
empty = []
print(f"{empty=}")

# Common list operations
names.append("Daisy")
print(f"{names=}")
names.append("Aaron")
print(f"{names=}")
names.insert(1, "Edgar")
print(f"{names=}")
names.remove("Edgar")
print(f"{names=}")
names.insert(10, "Joe")
print(f"{names=}")
names.insert(7, "Helen")
print(f"{names=}")

print(f"Pop: {names.pop()}")
print(f"{names=}")
print(f"Pop: {names.pop()}")
print(f"{names=}")

names.extend(["Frank", "George"])
print(f"{names=}")

# List slicing & indexing
print(f"{names[0]=}")
print(f"{names[2]=}")
print(f"{names[3]=}")
print(f"{names[5]=}")
print(f"{names[-1]=}")
print(f"{names[0:3]}")
print(f"{names[2:3]}")
print(f"{names[4:6]}")
print(f"{names[2:6]}")
print(f"{numbers[0:3]}")
print(f"{numbers[2:3]}")
print(f"{numbers[4:6]}")
print(f"{numbers[2:6]}")

print("Print names using a loop")
for name in names:
    print("  " + name)

"""## Tuples"""

# Creating tuples
coordinates = (10, 20)
print(f"{coordinates=}")
colors = ("red", "green", "blue")
print(f"{colors=}")
rgb = (255, 0, 0)
print(f"{rgb=}")
mixed = (1, "two", 3.0, False)
print(f"{mixed=}")

# Accessing tuple elements
print(f"{coordinates[0]=}")
print(f"{coordinates[1]=}")
print(f"{colors[0]=}")
print(f"{colors[1]=}")
print(f"{colors[2]=}")

r, g, b = rgb   # unpacking
print(f"{r=}")
print(f"{g=}")
print(f"{b=}")

"""## Sets"""

# Creating sets
coordinates={10, 20}
colors={'red', 'green', 'blue'}
rgb={255, 0, 0}
print(f"{coordinates=}")
print(f"{colors=}")
print(f"{rgb=}")

# Set operations
colors.add('yellow')
colors.add('purple')
colors.add('green')
print(f"{colors=}")

# Mathematical set operations
set1 = {1, 2, 3, 4}
set2 = {3, 4, 5, 6}
print(set1.union(set2))
print(set1.intersection(set2))
print(set1.difference(set2))
print(set1.symmetric_difference(set2))

# Removing duplicates from a list
my_list = [1, 2, 2, 3, 4, 4, 5, 4, 4, 3, 2, 1]
unique = list(set(my_list))
print(f"{my_list}")
print(f"{unique}")

"""## Dictionaries"""

person = {
    "name": "Alice",
    "age": 30,
    "city": "New York"
}

# Accessing & modifying
print(person["name"])
print(person["age"])
print(person["city"])

person["name"]='Bob'
person['city']="Phoenix"
print(person["name"])
print(person["age"])
print(person["city"])

print(person.keys())
print(person.values())
print(person.items())

# use a loop to go through the dictionary
# Iterating through dictionaries
for key in person:
    print(key, person[key])

for key, value in person.items():
    print(f"  ({key}: {value})")

